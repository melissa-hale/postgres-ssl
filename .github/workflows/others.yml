name: Docker Image CI/CD

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    strategy:
      matrix:
        version: ['13', '14', '15', '16']

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Dockerfile
        id: prepare_dockerfile
        run: |
          version=${{ matrix.version }}
          template_path="${GITHUB_WORKSPACE}/Dockerfile.template"
          dockerfile_path="${GITHUB_WORKSPACE}/Dockerfile.${version}"
            
          # Ensure the template exists
          if [[ ! -f "$template_path" ]]; then
            echo "Dockerfile template does not exist at ${template_path}"
            exit 1
          fi
        
          # Copy and modify the Dockerfile
          cp "$template_path" "$dockerfile_path"
          sed -i "s/{{version}}/${version}/g" "$dockerfile_path"
            
          # Debug: List the directory contents
          ls -lah "${GITHUB_WORKSPACE}"
            
          # Ensure the Dockerfile was created
          if [[ ! -f "$dockerfile_path" ]]; then
            echo "Modified Dockerfile does not exist at ${dockerfile_path}"
            exit 1
          fi
        
          echo "::set-output name=dockerfile_path::Dockerfile.${version}"
        shell: bash
        

      - name: Build and Publish
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ steps.prepare_dockerfile.outputs.dockerfile_path }}
          platforms: linux/arm64, linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ matrix.version }}
